use std::str::FromStr;
use ast::{Operator, Expr, Operation};

// Grammar:

//    number   : /-?[0-9]+/ ;
//    operator : '+' | '-' | '*' | '/' ;
//    expr     : <number> | '(' <operator> <expr>+ ')' ;
//    lispy    : /^/ <operator> <expr>+ /$/ ;
//

grammar;

pub Expr: Expr = {
  <i:Integer> => Expr::Integer(i),
  "(" <op:Operation> ")" => {
    Expr::Operation(op)
  },
};

Operation: Operation = {
  <operator:Operator> <operands:Expr+> => {
    Operation {
      operator: operator,
      operands: operands,
    }
  },
};

Operator: Operator = {
  "+" => Operator::Plus,
  "-" => Operator::Minus,
  "*" => Operator::Multiply,
  "/" => Operator::Divide,
};

Integer: i64 = {
  <s:r"-?[0-9]+"> => i64::from_str(s).expect("failed to parse integer"),
};

